---
- hosts: appservers-prod
  become: yes
  vars:
    env_file_path: ./Weight-Tracker/.env
    app_path: ./Weight-Tracker/

  vars_files:
    - ./vars.yml

  environment:
    NVM_DIR: /var/local/nvm
    PATH: /var/local/nvm/versions/node/v4.2.1/bin:{{ ansible_env.PATH }}

  tasks:
    - name: Install reqired packages
      apt: name={{ item }} state=present
      with_items:
        - git
        - curl
        - wget
    - name: install nodejs prerequisites
      apt:
        name:
          - apt-transport-https
          - gcc
          - g++
          - make
        state: present
    - name: add nodejs apt key
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present
    - name: add nodejs repository
      apt_repository:
        repo: deb https://deb.nodesource.com/node_14.x {{ ansible_lsb.codename }} main
        state: present
        update_cache: yes
    - name: install nodejs
      apt:
        name: nodejs
        state: present
    - name: clone repo
      command: git clone https://github.com/DanielFrd8/Weight-Tracker.git

    - name: Replaces the PORT in .env file
      replace:
        path: '{{ env_file_path }}'
        regexp: '"PORT"'
        replace: '{{ PORT }}'
    - name: Replaces the HOST in .env file
      replace:
        path: '{{ env_file_path }}'
        regexp: '"HOST"'
        replace: '{{ ansible_default_ipv4.address }}'
    - name: Replaces the HOST_URL in .env file
      replace:
        path: '{{env_file_path}}'
        regexp: '"HOST_URL"'
        replace: 'http://{{ ansible_eth0.ipv4.address }}:{{ PORT }}'

    - name: Replaces the PGHOST in .env file
      replace:
        path: '{{ env_file_path }}'
        regexp: '"PGHOST"'
        replace: '{{ PGHOST }}'
    - name: Replaces the PGUSERNAME in .env file
      replace:
        path: '{{ env_file_path }}'
        regexp: '"PGUSERNAME"'
        replace: '{{ PGUSERNAME }}'
    - name: Replaces the PGDATABASE in .env file
      replace:
        path: '{{ env_file_path }}'
        regexp: '"PGDATABASE"'
        replace: '{{ PGDATABASE }}'
    - name: Replaces the PGPASSWORD in .env file
      replace:
        path: '{{ env_file_path }}'
        regexp: '"PGPASSWORD"'
        replace: "{{ PGPASSWORD }}"

    - name: Replaces the COOKIE_ENCRYPT_PWD in .env file
      replace:
        path: '{{ env_file_path }}'
        regexp: '"COOKIE_ENCRYPT_PWD"'
        replace: '{{ COOKIE_ENCRYPT_PWD }}'

    - name: Replaces the OKTA_ORG_URL in .env file
      replace:
        path: '{{ env_file_path }}'
        regexp: '"OKTA_ORG_URL"'
        replace: '{{ OKTA_ORG_URL }}'
    - name: Replaces the OKTA_CLIENT_ID in .env file
      replace:
        path: '{{ env_file_path }}'
        regexp: '"OKTA_CLIENT_ID"'
        replace: '{{ OKTA_CLIENT_ID }}'
    - name: Replaces the OKTA_CLIENT_SECRET in .env file
      replace:
        path: '{{ env_file_path }}'
        regexp: '"OKTA_CLIENT_SECRET"'
        replace: '{{ OKTA_CLIENT_SECRET }}'

    - name: Install npm dependencies from package.json
      npm:
        ci: true
        path: '{{ app_path }}'
    - name: Init DB
      command:
        cmd: npm run dev
        chdir: '{{ app_path }}'
    - name: pm2 install
      npm:
        name: pm2
        global: yes

    - name: pm2 startup
      command:
        cmd: pm2 startup
    - name: setup pm2 startup script
      command: 
        cmd: sudo env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u daniel --hp /home/daniel
    - name: start the application
      command: 
        cmd: pm2 start "{{app_path}}/src/index.js"
    - name: 
      command: 
        cmd: pm2 save
